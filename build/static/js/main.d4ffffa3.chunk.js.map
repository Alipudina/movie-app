{"version":3,"sources":["services/httpService.js","components/Header.jsx","components/TableComponent.jsx","components/AddMovieButton.jsx","components/SearchComponent.jsx","components/common/InputComponent.jsx","components/common/FormComponent.jsx","components/AddMovieForm.jsx","components/UpdateMovieForm.jsx","App.js","serviceWorker.js","index.js"],"names":["httpServer","Header","Container","fluid","Row","Col","className","TableComponent","movies","noMovies","disableDeleteButton","onUpdate","onDelete","searchedArray","length","Table","striped","bordered","hover","map","movie","key","_id","style","background","i","name","genre","rate","onClick","disabled","to","AddMovieButton","state","this","props","handleAddMovieButton","Component","SearchComponent","id","onChange","e","onSearch","type","aria-label","aria-describedby","autoFocus","placeholder","InputComponent","label","value","error","inputFocus","Form","Group","controlId","Label","Control","FormComponent","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","handleSubmit","preventDefault","setState","urlPath","location","pathname","doSubmitAddMovieForm","doSubmitUpdateMovieForm","validateProperty","obj","handleChange","input","currentTarget","errorMessage","renderButton","Button","variant","renderInput","AddMovieForm","string","min","required","number","max","Jumbotron","onSubmit","redirectToMovies","UpdateMovieForm","movieToUpdate","updateData","App","handleSearch","searchValue","filter","toLowerCase","startsWith","notSearchedArray","sortedMovies","window","handleDelete","axios","delete","then","result","toast","warning","catch","err","console","log","handleUpdateButton","addMovieData","post","success","setTimeout","updatedMovie","put","updatedMoviesArray","info","get","dbMovies","autoClose","exact","component","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4ffffa3.chunk.js","sourcesContent":["export const httpServer =\n  \"https://murmuring-wildwood-56410.herokuapp.com/movies/\";\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\"text-center bg-dark text-white p-5 text-uppercase h3 mb-0\">\n          List of Movies from Database\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst TableComponent = ({\n  movies,\n  noMovies,\n  disableDeleteButton,\n  onUpdate,\n  onDelete,\n  searchedArray,\n}) => {\n  if (movies.length === 0 || noMovies) return null;\n  return (\n    <Table striped bordered hover className=\"text-center\">\n      <thead>\n        <tr>\n          <th>Movie</th>\n          <th>Genre</th>\n          <th>Rate</th>\n        </tr>\n      </thead>\n      <tbody>\n        {movies.map((movie) => {\n          return (\n            <tr\n              key={movie._id}\n              style={{\n                background: (() => {\n                  for (let i = 0; i < searchedArray.length; i++) {\n                    if (movie.name === searchedArray[i].name) {\n                      return \"lime\";\n                    }\n                  }\n                })(),\n              }}\n            >\n              <td>{movie.name}</td>\n              <td>{movie.genre}</td>\n              <td>{movie.rate}</td>\n              <td>\n                <button\n                  onClick={() => onDelete(movie)}\n                  disabled={disableDeleteButton}\n                  className=\"btn btn-danger\"\n                >\n                  Delete\n                </button>\n              </td>\n              <td>\n                <NavLink\n                  className=\"btn btn-primary text-white\"\n                  onClick={() => onUpdate(movie._id)}\n                  to=\"/movies/update/\"\n                >\n                  Update\n                </NavLink>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default TableComponent;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nclass AddMovieButton extends Component {\n  state = {};\n  render() {\n    return (\n      <Container className=\"text-center my-5\">\n        <Link\n          onClick={this.props.handleAddMovieButton}\n          to=\"/movies/add\"\n          className=\"p-3 px-4 btn btn-success\"\n        >\n          Add Movie\n        </Link>\n      </Container>\n    );\n  }\n}\n\nexport default AddMovieButton;\n","import React, { Component, Fragment } from \"react\";\n\nclass SearchComponent extends Component {\n  state = {};\n\n  //   onChange = () => {\n  //     console.log(555555);\n  //   };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span\n              className=\"input-group-text bg-secondary text-white\"\n              id=\"inputGroup-sizing-default\"\n            >\n              Search\n            </span>\n          </div>\n          <input\n            onChange={(e) => this.props.onSearch(e)}\n            type=\"text\"\n            className=\"form-control search bg-secondary text-white\"\n            aria-label=\"Sizing example input\"\n            aria-describedby=\"inputGroup-sizing-default\"\n            autoFocus\n            placeholder=\"search movie\"\n          />\n        </div>\n        {this.props.noMovies && (\n          <div className=\"alert alert-danger\">No Result!</div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default SearchComponent;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst InputComponent = ({\n  name,\n  label,\n  value,\n  error,\n  inputFocus,\n  onChange,\n}) => {\n  return (\n    <Form.Group controlId=\"formBasicEmail\">\n      <Form.Label>{label}</Form.Label>\n      <Form.Control\n        value={value}\n        autoFocus={inputFocus}\n        onChange={onChange}\n        type=\"text\"\n        name={name}\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </Form.Group>\n  );\n};\n\nexport default InputComponent;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport { Button } from \"react-bootstrap\";\nimport InputComponent from \"./InputComponent\";\n// import { NavLink } from \"react-router-dom\";\n\nclass FormComponent extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  // navlink\n  //   <NavLink\n  //   onClick={(e) => (this.validate() ? e.preventDefault() : null)}\n  //   to=\"/movies\"\n  //   className=\"text-white\"\n  //   type=\"submit\"\n  // > </NavLink>\n  //\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n\n    const urlPath = this.props.location.pathname;\n\n    if (urlPath === \"/movies/add\") {\n      this.props.doSubmitAddMovieForm(this.state.data);\n    }\n\n    if (urlPath === \"/movies/update/\") {\n      this.props.doSubmitUpdateMovieForm(this.state.data);\n    }\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n\n    const schema = { [name]: this.schema[name] };\n\n    const { error } = Joi.validate(obj, schema);\n\n    return error ? error.details[0].message : null;\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton = (label) => {\n    return (\n      <Button disabled={this.validate()} variant=\"primary\" type=\"submit\">\n        {label}\n      </Button>\n    );\n  };\n\n  renderInput = (name, label, inputFocus = false) => {\n    const { data, errors } = this.state;\n    return (\n      <InputComponent\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleChange}\n        error={errors[name]}\n        inputFocus={inputFocus}\n      />\n    );\n  };\n}\n\nexport default FormComponent;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Jumbotron, Row, Col } from \"react-bootstrap\";\nimport FormComponent from \"./common/FormComponent\";\n\nclass AddMovieForm extends FormComponent {\n  state = {\n    data: {\n      name: \"\",\n      genre: \"\",\n      rate: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    name: Joi.string().min(3).required().label(\"Movie Name\"),\n    genre: Joi.string().min(3).required().label(\"Genre\"),\n    rate: Joi.number().min(1).max(10).required().label(\"Rate\"),\n  };\n\n  render() {\n    return (\n      <Jumbotron>\n        <Row>\n          <Col className=\"text-center pb-3 text-uppercase h3\">new movie</Col>\n        </Row>\n\n        <Form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Movie Name\", 2)}\n\n          {this.renderInput(\"genre\", \"Genre\")}\n\n          {this.renderInput(\"rate\", \"Rate\")}\n\n          {this.renderButton(\"Add Movie\")}\n        </Form>\n        {this.props.redirectToMovies && <Redirect to=\"/movies\" />}\n      </Jumbotron>\n    );\n  }\n}\n\nexport default AddMovieForm;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { Form, Jumbotron, Row, Col } from \"react-bootstrap\";\nimport FormComponent from \"./common/FormComponent\";\nimport { Redirect } from \"react-router-dom\";\n\nclass UpdateMovieForm extends FormComponent {\n  state = {\n    data: {\n      name: \"\",\n      genre: \"\",\n      rate: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    name: Joi.string().min(3).required().label(\"Movie Name\"),\n    genre: Joi.string().min(3).required().label(\"Genre\"),\n    rate: Joi.number().min(1).max(10).required().label(\"Rate\"),\n  };\n\n  componentDidMount() {\n    const movieToUpdate = this.props.movieToUpdate;\n\n    const updateData = {\n      name: movieToUpdate[0].name,\n      genre: movieToUpdate[0].genre,\n      rate: movieToUpdate[0].rate,\n    };\n\n    this.setState({ data: updateData });\n  }\n\n  render() {\n    const movieToUpdate = this.props.movieToUpdate;\n    if (!movieToUpdate) return null;\n\n    return (\n      <Jumbotron>\n        <Row>\n          <Col className=\"text-center pb-3 text-uppercase h3\">update movie</Col>\n        </Row>\n        <Form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Movie Name\", 2)}\n\n          {this.renderInput(\"genre\", \"Genre\", null)}\n\n          {this.renderInput(\"rate\", \"Rate\", null)}\n\n          {this.renderButton(\"Update\")}\n        </Form>\n\n        {this.props.redirectToMovies && <Redirect to=\"/movies\" />}\n      </Jumbotron>\n    );\n  }\n}\n\nexport default UpdateMovieForm;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { httpServer } from \"./services/httpService\";\n\nimport Header from \"./components/Header\";\nimport TableComponent from \"./components/TableComponent\";\nimport AddMovieButton from \"./components/AddMovieButton\";\nimport SearchComponent from \"./components/SearchComponent\";\nimport AddMovieForm from \"./components/AddMovieForm\";\nimport UpdateMovieForm from \"./components/UpdateMovieForm\";\n\nclass App extends Component {\n  state = {\n    movies: [],\n    noMovies: false,\n    movieToUpdate: \"\",\n    redirectToMovies: false,\n    disableDeleteButton: false,\n    searchedArray: [],\n  };\n\n  // ///////////////////////////////////\n  // start to check database for movies\n  async componentDidMount() {\n    console.log(httpServer);\n    const { data: dbMovies } = await axios.get(httpServer);\n\n    if (dbMovies.length === 1) {\n      this.setState({ disableDeleteButton: true });\n    }\n\n    this.setState({ movies: dbMovies });\n  }\n\n  // ///////////////////////////////////////////////\n  // handleSearch\n  handleSearch = (e) => {\n    const movies = [...this.state.movies];\n\n    const searchValue = e.currentTarget.value;\n\n    const searchedArray = movies.filter((movie) =>\n      movie.name.toLowerCase().startsWith(searchValue.toLowerCase())\n    );\n\n    const notSearchedArray = movies.filter(\n      (movie) => !movie.name.toLowerCase().startsWith(searchValue.toLowerCase())\n    );\n\n    const sortedMovies = [...searchedArray, ...notSearchedArray];\n\n    if (searchedArray.length === 0 && searchValue.length > 0) {\n      return this.setState({ noMovies: true });\n    }\n\n    if (searchValue.length === 0) {\n      window.location = \"/movies\";\n    }\n\n    return this.setState({\n      movies: sortedMovies,\n      noMovies: false,\n      searchedArray,\n    });\n  };\n\n  // //////////////////////////////////////////////\n  // handleDelete\n  handleDelete = ({ _id: id }) => {\n    axios\n      .delete(httpServer + id)\n      .then((result) => {\n        const movies = this.state.movies.filter((movie) => movie._id !== id);\n        this.setState({ movies });\n\n        if (this.state.movies.length === 1) {\n          this.setState({ disableDeleteButton: true });\n        }\n        toast.warning(\"Movie DELETED from database!\");\n        return;\n      })\n      .catch((err) => console.log(\"Delete Error \", err));\n  };\n\n  // ///////////////////////////////////////////////\n  // handleUpdateButton\n  handleUpdateButton = (id) => {\n    const movies = [...this.state.movies];\n    const movieToUpdate = movies.filter((movie) => movie._id === id);\n\n    this.setState({\n      movieToUpdate,\n      redirectToMovies: false,\n    });\n  };\n\n  // addMovieButton\n  handleAddMovieButton = () => {\n    this.setState({\n      redirectToMovies: false,\n    });\n  };\n\n  // doSubmitAddMovieForm\n  doSubmitAddMovieForm = (addMovieData) => {\n    axios\n      .post(httpServer + \"add\", addMovieData)\n      .then((movie) => {\n        const movies = [...this.state.movies, movie.data];\n        this.setState({\n          movies,\n          disableDeleteButton: false,\n        });\n\n        toast.success(\"Movie ADDED to database!\");\n\n        setTimeout(() => this.setState({ redirectToMovies: true }), 1300);\n\n        return;\n      })\n      .catch((err) => console.log(err.message));\n  };\n\n  // ////////////////////////////////////////////\n  // doSubmitUpdateMovieForm\n  doSubmitUpdateMovieForm = (updatedMovie) => {\n    const id = this.state.movieToUpdate[0]._id;\n\n    axios\n      .put(httpServer + \"update/\" + id, updatedMovie)\n      .then((movie) => console.log(movie))\n      .catch((err) => console.log(\"Update Error\", err));\n    const moviesArray = [...this.state.movies];\n    const updatedMoviesArray = moviesArray.map((movie) => {\n      if (movie._id === id) {\n        movie.name = updatedMovie.name;\n        movie.genre = updatedMovie.genre;\n        movie.rate = updatedMovie.rate;\n      }\n      return movie;\n    });\n    this.setState({ movies: updatedMoviesArray });\n    toast.info(\"Movie UPDATED in database!\");\n\n    setTimeout(() => this.setState({ redirectToMovies: true }), 1300);\n  };\n\n  render() {\n    const {\n      movies,\n      noMovies,\n      redirectToMovies,\n      disableDeleteButton,\n      searchedArray,\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <ToastContainer autoClose={1200} />\n          <Route path=\"/movies\" exact component={Header} />\n          <Route\n            path=\"/movies\"\n            exact\n            render={(props) => (\n              <SearchComponent\n                {...props}\n                movies={movies}\n                onSearch={this.handleSearch}\n                noMovies={noMovies}\n              />\n            )}\n          />\n          <Route\n            path=\"/movies\"\n            exact\n            render={(props) => (\n              <TableComponent\n                {...props}\n                movies={movies}\n                onUpdate={this.handleUpdateButton}\n                noMovies={noMovies}\n                disableDeleteButton={disableDeleteButton}\n                onDelete={this.handleDelete}\n                searchedArray={searchedArray}\n              />\n            )}\n          />\n          <Route\n            path=\"/movies\"\n            exact\n            render={() => (\n              <AddMovieButton\n                handleAddMovieButton={this.handleAddMovieButton}\n              />\n            )}\n          />\n          <Route\n            path=\"/movies/add\"\n            render={(props) => (\n              <AddMovieForm\n                {...props}\n                redirectToMovies={redirectToMovies}\n                doSubmitAddMovieForm={this.doSubmitAddMovieForm}\n              />\n            )}\n          />\n          <Route\n            path=\"/movies/update\"\n            render={(props) => (\n              <UpdateMovieForm\n                {...props}\n                movieToUpdate={this.state.movieToUpdate}\n                doSubmitUpdateMovieForm={this.doSubmitUpdateMovieForm}\n                redirectToMovies={redirectToMovies}\n              />\n            )}\n          />\n          <Redirect to=\"/movies\" />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}